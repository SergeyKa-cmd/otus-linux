# -*- mode: ruby -*-
# vi: set ft=ruby :

Vagrant.configure(2) do |config|
    config.vm.box = "centos/7"
    config.vm.box_check_update = false
    #config.vm.network "forwarded_port", guest: 80, host: 8080
    #config.vm.synced_folder ".", "/vagrant"
  
    config.vm.provision "shell", inline: <<-SHELL
      
      #############################
      # Provisioning all machines #
      #############################
      # Disable selinux
      sed -i "s/SELINUX=enforcing/SELINUX=disabled/" /etc/selinux/config
      # Setup /etc/hosts 
      echo -e "192.168.10.10 nfsserver" >> /etc/hosts
      echo -e "192.168.10.11 client" >> /etc/hosts
      
      # Setup Moscow time
      mv /etc/localtime /etc/localtime.bak
      ln -s /usr/share/zoneinfo/Europe/Moscow /etc/localtime
      
      # Enable firewalld
      systemctl start firewalld
      systemctl enable firewalld
    SHELL
  
    config.vm.define "nfsserver", primary: true do |s|
      s.vm.hostname = 'nfsserver'
      s.vm.network "private_network", ip: "192.168.10.10"
      s.vm.provision "shell", inline: <<-SHELL
      # Setup firewalld for nfs
      firewall-cmd --zone=internal --change-interface=eth1
      firewall-cmd --add-service=nfs3 --zone=internal --permanent
      firewall-cmd --add-service=mountd --zone=internal --permanent
      firewall-cmd --add-service=rpc-bind --zone=internal --permanent
      firewall-cmd --reload
      
      # Enable and start nfs services
      systemctl enable nfs-server
      systemctl enable rpcbind
      systemctl enable nfs-idmap
      systemctl enable nfs-lock
      
      systemctl start nfs-server
      systemctl start rpcbind
      systemctl start nfs-idmap
      systemctl start nfs-lock
      
      # Check status of nfs service
      systemctl status nfs
      # Create folder for sharing
      mkdir -p /var/nfs_share/upload
      chmod 555 /var/nfs_share
      chmod 777 /var/nfs_share/upload
      # Export folder "nfs_share", where "client" is client's hostname (or IP)
      echo "/var/nfs_share client(rw,async,root_squash)" >> /etc/exports
      exportfs -r
      
      # Restart nfs service
      systemctl restart nfs.service
      systemctl status nfs.service
      SHELL
    end
  
    config.vm.define "client" do |c|
       c.vm.hostname = 'client'
       c.vm.network "private_network", ip: "192.168.10.11"
       c.vm.provision "shell", inline: <<-SHELL
      
       # Find out that share available on the NFS Server
       showmount -e nfsserver
       
       # Try mount nsf folder for test
       # mkdir /mnt/nfs_folder
       # sudo mount -t nfs -o rw,nosuid,noexec,soft,intr,proto=udp,vers=3  nfsserver:/var/nfs_share /mnt/nfs_folder
       
       # Install autofs
       yum install autofs -y
       systemctl start autofs
       systemctl enable autofs
       # Add entry in master file
       echo -e "/mnt/nfsserver /etc/auto.master.d/auto.nfs --timeout=600" >> /etc/auto.master
       # Add entry in corresponding map file
       echo -e "public  -fstype=nfs,rw,nosuid,noexec,soft,intr,proto=udp,vers=3  nfsserver:/var/nfs_share" > /etc/auto.master.d/auto.nfs
       # Restart autofs service
       systemctl restart autofs
       
      SHELL
 
    end
 
  end