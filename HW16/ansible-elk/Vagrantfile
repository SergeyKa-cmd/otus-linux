Vagrant.configure(2) do |config|

  config.vm.define "elk" do |subconfig|
    subconfig.vm.box = "centos/7"
    subconfig.vm.hostname="elk"
    subconfig.vm.network :private_network, ip: "192.168.50.31"
    subconfig.vm.provider "virtualbox" do |vb|
      vb.memory = "4096"
      vb.cpus = "2"
    end
    config.vm.provision "ansible" do |ansible|
      ansible.playbook = "install/elk.yml"
    end
  end

  config.vm.define "elkclient" do |subconfig|
    subconfig.vm.box = "centos/7"
    subconfig.vm.hostname="elkclient"
    subconfig.vm.network :private_network, ip: "192.168.50.32"
    subconfig.vm.provider "virtualbox" do |vb|
      vb.memory = "2048"
      vb.cpus = "2"
    end
    config.vm.provision "ansible" do |ansible|
      ansible.playbook = "install/elk_client.yml"
    end
  end


  config.ssh.insert_key = false 
  config.ssh.private_key_path = ['~/.vagrant.d/insecure_private_key', '~/.ssh/id_rsa']
  config.vm.provision "file", source: "~/.ssh/id_rsa.pub", destination: "~/.ssh/authorized_keys"  

  config.vm.provision "shell", inline: <<-SHELL
  if [ ! -f "/usr/bin/python" -a -f "/usr/bin/python3" ]; then ln -s /usr/bin/python3 /usr/bin/python; fi
  SHELL

end